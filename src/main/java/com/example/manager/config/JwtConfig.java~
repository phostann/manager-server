package com.example.manager.config;

import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.stereotype.Component;

import javax.crypto.SecretKey;
import java.util.Date;

/**
 * JWT配置类
 */
@Component
@ConfigurationProperties(prefix = "jwt")
public class JwtConfig {
    /**
     * 密钥
     * 生产环境应从配置文件或环境变量中获取
     */
    private String secret = "AHT0deYCFjWYgN75wOlY5X1gQQG73kfU40FrfbGQ4YpBSdsdfDDSJFsdshjk324098";
    
    /**
     * 过期时间（毫秒）
     * 默认24小时
     */
    private long expiration = 86400000;
    
    /**
     * 刷新token过期时间（毫秒）
     * 默认7天
     */
    private long refreshExpiration = 604800000;
    
    /**
     * token前缀
     */
    private String tokenPrefix = "Bearer ";
    
    /**
     * 请求头名称
     */
    private String header = "Authorization";
    
    /**
     * 生成JWT的密钥
     */
    public SecretKey getSecretKey() {
        return Keys.hmacShaKeyFor(Decoders.BASE64.decode(secret));
    }
    
    /**
     * 获取token过期时间
     */
    public Date getExpirationDate() {
        return new Date(System.currentTimeMillis() + expiration);
    }
    
    /**
     * 获取刷新token过期时间
     */
    public Date getRefreshExpirationDate() {
        return new Date(System.currentTimeMillis() + refreshExpiration);
    }
    
    // Getters and Setters
    public String getSecret() {
        return secret;
    }
    
    public void setSecret(String secret) {
        this.secret = secret;
    }
    
    public long getExpiration() {
        return expiration;
    }
    
    public void setExpiration(long expiration) {
        this.expiration = expiration;
    }
    
    public long getRefreshExpiration() {
        return refreshExpiration;
    }
    
    public void setRefreshExpiration(long refreshExpiration) {
        this.refreshExpiration = refreshExpiration;
    }
    
    public String getTokenPrefix() {
        return tokenPrefix;
    }
    
    public void setTokenPrefix(String tokenPrefix) {
        this.tokenPrefix = tokenPrefix;
    }
    
    public String getHeader() {
        return header;
    }
    
    public void setHeader(String header) {
        this.header = header;
    }
} 